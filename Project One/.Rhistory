y="Auto Correlation", x="Hours")+
theme_bw()+ theme()
ws_pacf_diff <-ggPacf(diff(ws,lag = 1), color = 'darkorange4')+
labs(title = "PACF Combined Pipe Flow Rates",
subtitle = 'October 23, 2015 - December 23, 2015',
y="Auto Correlation", x="Hours")+
theme_bw()+ theme()
#Establishing a lambda value for ARIMA transformations
lambda <-  BoxCox.lambda(ws)
#Lambda = 0.9531552
# Auto arima's including season components for AICc and BIC
aic<- auto.arima(ws, seasonal = TRUE, ic = 'aicc', lambda = lambda)
bic<-auto.arima(ws, seasonal = TRUE, ic = 'bic', lambda = lambda )
# Plots of auto.arimas
aic_plot <- auto.arima(ws, seasonal = TRUE, ic = 'aicc', lambda = lambda)%>%
forecast(h=24*7)%>%
autoplot() +
labs(title = "AIC selected ARIMA(1,1,3)(0,0,1)[24] ",
subtitle = 'October 23, 2015 - December 23, 2015',
y="Flowrate", x="Days")+
theme_bw()+ theme()
bic_plot<-auto.arima(ws, seasonal = TRUE, ic = 'bic', lambda = lambda )%>%
forecast(h=24*7)%>%
autoplot()+
labs(title = "BIC selected ARIMA(2,1,1)  ",
subtitle = 'October 23, 2015 - December 23, 2015',
y="Flowrate", x="Days")+
theme_bw()+ theme()
# Final AIC from AICc and predictions
final_ws <- Arima(ws, order=c(1,1,3), seasonal=c(0,0,1),lambda=lambda)
preds_ws <-as.data.frame(forecast(final_ws, h = 168))
#Renaming fields for output data
waterflow_all <-waterflow_all%>%
rename( DateTime = hour,
WaterFlow = waterflow)
# Formatting forecasts for output data
preds_ws<-preds_ws%>%
mutate(DateTime = seq(from=as.POSIXct("2015-12-3 17:00", tz="UTC"),
to=as.POSIXct("2015-12-10 16:00", tz="UTC"),
by="hour") )%>%
select(DateTime, `Point Forecast`, `Lo 80`,`Hi 80`, `Lo 95`, `Hi 95`)
# Writing forecasts and final data to the 'XLSX' file
#write.xlsx(waterflow_all, file = file, sheetName = "Combined Waterflow", col.names = TRUE, row.names = FALSE, append = TRUE)
#write.xlsx(preds_ws, file =  file , sheetName = "Forecasts", col.names = TRUE, row.names = FALSE, append = TRUE)
p1<-ggAcf(ATM1_ts, color = 'darkorange4')+ labs(title="ACF: ATM1")+ theme_bw()+theme()
p2<-ggPacf(ATM1_ts,color = 'darkorange4')+ labs(title="PACF: ATM1")+ theme_bw()+ theme()
p3<-ggAcf(ATM2_ts,color = 'darkorange4')+ labs(title="ACF: ATM2")+ theme_bw()+theme()
p4<-ggPacf(ATM2_ts,color = 'darkorange4')+ labs(title="PACF: ATM2")+ theme_bw()+ theme()
p5<-ggAcf(ATM4_ts,color = 'darkorange4')+ labs(title="ACF: ATM4")+ theme_bw()+theme()
p6<-ggPacf(ATM4_ts,color = 'darkorange4')+ labs(title="PACF: ATM4")+ theme_bw()+ theme()
grid.arrange(grob=p1, p3, p5, p2, p4, p6, ncol=3)
w1plot<-autoplot(w1,color='peachpuff')+
labs(title = "Pipe One Flow Rates", subtitle = 'October 23, 2015 - November 1, 2015', y="Flowrate", x="Days")+
theme_bw()+ theme()
w2plot<-autoplot(w2, facets = T, color ='lightpink')+
labs(title = "Pipe Two Flow Rates", subtitle = 'October 23, 2015 - December 23, 2015',
y="Flowrate", x="Days")+ theme_bw()+ theme()
wsplot<-autoplot(ws, facets = T, color ='deeppink4')+labs(title = "Combined Pipe Flow Rates", subtitle = 'October 23, 2015 - December 23, 2015', y="Flowrate", x="Days")+ theme_bw()+ theme()
grid.arrange(grob=w1plot, w2plot, wsplot, ncol=3)
w1plot<-autoplot(w1,fill='peachpuff')+
labs(title = "Pipe One Flow Rates", subtitle = 'October 23, 2015 - November 1, 2015', y="Flowrate", x="Days")+
theme_bw()+ theme()
w2plot<-autoplot(w2, facets = T, color ='lightpink')+
labs(title = "Pipe Two Flow Rates", subtitle = 'October 23, 2015 - December 23, 2015',
y="Flowrate", x="Days")+ theme_bw()+ theme()
wsplot<-autoplot(ws, facets = T, color ='deeppink4')+labs(title = "Combined Pipe Flow Rates", subtitle = 'October 23, 2015 - December 23, 2015', y="Flowrate", x="Days")+ theme_bw()+ theme()
grid.arrange(grob=w1plot, w2plot, wsplot, ncol=3)
w1plot<-autoplot(w1,fill='peachpuff')+
labs(title = "Pipe One Flow Rates", subtitle = 'October 23, 2015 - November 1, 2015', y="Flowrate", x="Days")+
theme_bw()+ theme()
w2plot<-autoplot(w2,fill ='lightpink')+
labs(title = "Pipe Two Flow Rates", subtitle = 'October 23, 2015 - December 23, 2015',
y="Flowrate", x="Days")+ theme_bw()+ theme()
wsplot<-autoplot(ws, facets = T, color ='deeppink4')+labs(title = "Combined Pipe Flow Rates", subtitle = 'October 23, 2015 - December 23, 2015', y="Flowrate", x="Days")+ theme_bw()+ theme()
grid.arrange(grob=w1plot, w2plot, wsplot, ncol=3)
w1plot<-autoplot(w1,fill='peachpuff')+
labs(title = "Pipe One Flow Rates", subtitle = 'October 23, 2015 - November 1, 2015', y="Flowrate", x="Days")+
theme_bw()+ theme()
w2plot<-autoplot(w2,fill ='lightpink')+
labs(title = "Pipe Two Flow Rates", subtitle = 'October 23, 2015 - December 23, 2015',
y="Flowrate", x="Days")+ theme_bw()+ theme()
wsplot<-autoplot(ws, fill='deeppink4')+labs(title = "Combined Pipe Flow Rates", subtitle = 'October 23, 2015 - December 23, 2015', y="Flowrate", x="Days")+ theme_bw()+ theme()
grid.arrange(grob=w1plot, w2plot, wsplot, ncol=3)
w1plot<-autoplot(w1,colour ='peachpuff')+
labs(title = "Pipe One Flow Rates", subtitle = 'October 23, 2015 - November 1, 2015', y="Flowrate", x="Days")+
theme_bw()+ theme()
w2plot<-autoplot(w2,fill ='lightpink')+
labs(title = "Pipe Two Flow Rates", subtitle = 'October 23, 2015 - December 23, 2015',
y="Flowrate", x="Days")+ theme_bw()+ theme()
wsplot<-autoplot(ws, fill='deeppink4')+labs(title = "Combined Pipe Flow Rates", subtitle = 'October 23, 2015 - December 23, 2015', y="Flowrate", x="Days")+ theme_bw()+ theme()
grid.arrange(grob=w1plot, w2plot, wsplot, ncol=3)
w1plot<-autoplot(w1,colour ='peachpuff')+
labs(title = "Pipe One Flow Rates", subtitle = 'October 23, 2015 - November 1, 2015', y="Flowrate", x="Days")+
theme_bw()+ theme()
w2plot<-autoplot(w2,colour ='lightpink')+
labs(title = "Pipe Two Flow Rates", subtitle = 'October 23, 2015 - December 23, 2015',
y="Flowrate", x="Days")+ theme_bw()+ theme()
wsplot<-autoplot(ws, colour ='deeppink4')+labs(title = "Combined Pipe Flow Rates", subtitle = 'October 23, 2015 - December 23, 2015', y="Flowrate", x="Days")+ theme_bw()+ theme()
grid.arrange(grob=w1plot, w2plot, wsplot, ncol=3)
head(preds_ws, 50)%>%
knitr::kable(caption = 'First few predictions in the set')%>%
kable_styling()
head(preds_ws, 30)%>%
knitr::kable(caption = 'First few predictions in the set')%>%
kable_styling()
autoplot(subset(ws, start=950))+
autolayer(forecast(final_ws), color="darkorchard")
autoplot(subset(ws, start=950))+
autolayer(forecast(final_ws), color="darkorchid")
ATM_FC %>% mutate(ATM1=as.numeric(as.character(ATM1)),
ATM2=as.numeric(as.character(ATM2)),
ATM3=as.numeric(as.character(ATM3)),
ATM4=as.numeric(as.character(ATM4))) %>%
kable(caption="ATM Mean Point Forecast",digits=2) %>% kable_styling(full_width = T) %>% row_spec()
autoplot(atm_ts, facets = T)+
geom_line(color="blue")
labs(title = "Daily ATM Transactions",
subtitle = "Series: ATM1", y="Cash (in hundreds)", x="Weeks")+
theme_bw()+ theme()
autoplot(atm_ts, facets = T)+
geom_line(color=variable)+
labs(title = "Daily ATM Transactions",
subtitle = "Series: ATM1", y="Cash (in hundreds)", x="Weeks")+
theme_bw()+ theme()+scale_colour_brewer(palette = "RdPu")
autoplot(atm_ts, facets = T)+
geom_line(color=series)+
labs(title = "Daily ATM Transactions",
subtitle = "Series: ATM1", y="Cash (in hundreds)", x="Weeks")+
theme_bw()+ theme()+scale_colour_brewer(palette = "RdPu")
?geom_line
autoplot(atm_ts, facets = T)+
geom_line(color="darkorchid")+
labs(title = "Daily ATM Transactions",
subtitle = "Series: ATM1", y="Cash (in hundreds)", x="Weeks")+
theme_bw()+ theme()
autoplot(atm_ts, facets = T)+
geom_line(color="orange")+
labs(title = "Daily ATM Transactions",
subtitle = "Series: ATM1", y="Cash (in hundreds)", x="Weeks")+
theme_bw()+ theme()
autoplot(atm_ts, facets = T)+
geom_line(color="darkorange")+
labs(title = "Daily ATM Transactions",
subtitle = "Series: ATM1", y="Cash (in hundreds)", x="Weeks")+
theme_bw()+ theme()
autoplot(atm_ts, facets = T)+
geom_line()+
labs(title = "Daily ATM Transactions",
subtitle = "Series: ATM1", y="Cash (in hundreds)", x="Weeks")+
theme_bw()+ theme()+scale_color_brewer(palette = "RdPu")
autoplot(atm_ts, facets = T)+
geom_line(color="Grey")+
labs(title = "Daily ATM Transactions",
subtitle = "Series: ATM1", y="Cash (in hundreds)", x="Weeks")+
theme_bw()+ theme()+scale_color_brewer(palette = "RdPu")
autoplot(atm_ts, facets = T)+
geom_line(color="#D8BFD8")+
labs(title = "Daily ATM Transactions",
subtitle = "Series: ATM1", y="Cash (in hundreds)", x="Weeks")+
theme_bw()+ theme()
autoplot(atm_ts, facets = T)+
geom_line(color="#4B0082")+
labs(title = "Daily ATM Transactions",
subtitle = "Series: ATM1", y="Cash (in hundreds)", x="Weeks")+
theme_bw()+ theme()
# season plot
p1 <- ggseasonplot(ts_data)+
labs(title="Seasonal Plot")+theme_bw()+theme(legend.position = 'none')+
scale_y_continuous(label = unit_format(unit = "m", scale = 1e-6))
# sub-season plot
p2 <- ggsubseriesplot(ts_data, color='darkorange4')+labs(title="Subseries Plot", y="")+theme_bw()+theme()+
scale_y_continuous(label = unit_format(unit = "m", scale = 1e-6))
# ggAcf
p3 <- ggAcf(ts_data,color = 'darkorange4')+labs(title="ACF Plot", y="")+theme_bw()+theme()
# STL decomposition
p4 <- autoplot(stl1)+theme_bw()+theme()+scale_y_continuous(label = unit_format(unit = "m", scale = 1e-6))
grid.arrange(grob=p1, p2, p3, p4, ncol=2,
layout_matrix = rbind(c(1, 4),
c(2, 4),
c(3, 4)),
top=textGrob(label="Diagnostic Plots"))
# season plot
p1 <- ggseasonplot(ts_data)+
labs(title="Seasonal Plot")+theme_bw()+theme(legend.position = 'none')+
scale_y_continuous(label = unit_format(unit = "m", scale = 1e-6))
# sub-season plot
p2 <- ggsubseriesplot(ts_data)+labs(title="Subseries Plot", y="")+theme_bw()+theme()+
scale_y_continuous(label = unit_format(unit = "m", scale = 1e-6))
# ggAcf
p3 <- ggAcf(ts_data,color = 'darkorange4')+labs(title="ACF Plot", y="")+theme_bw()+theme()
# STL decomposition
p4 <- autoplot(stl1, colour = 'darkorange4')+theme_bw()+theme()+scale_y_continuous(label = unit_format(unit = "m", scale = 1e-6))
grid.arrange(grob=p1, p2, p3, p4, ncol=2,
layout_matrix = rbind(c(1, 4),
c(2, 4),
c(3, 4)),
top=textGrob(label="Diagnostic Plots"))
# time series plot
autoplot(ts_data, colour='darkorange4') +
labs(title = "Monthly Residential Power Usage", subtitle = "Time Series: 01/98 - 12/13", y = "KWH (in Millions)")+
theme_bw()+theme()+scale_y_continuous(label = unit_format(unit = "m", scale = 1e-6))
autoplot(atm_ts, facets = T)+
geom_line(color="darkorange4")+
labs(title = "Daily ATM Transactions",
subtitle = "Series: ATM1", y="Cash (in hundreds)", x="Weeks")+
theme_bw()+ theme()
p1<-autoplot(arima_auto$fitted)+autolayer(arima_fc, color="peachpuff1")+
grid.arrange(p1, nrow=1)
p1<-autoplot(arima_auto$fitted)+autolayer(arima_fc, color="peachpuff1")+
p1
p1<-autoplot(arima_auto$fitted)+autolayer(arima_fc, color="peachpuff1")
p1
p1<-autoplot(arima_auto$fitted)+autolayer(arima_fc$mean, color="peachpuff1")
p1
autoplot(arima_fc)+
scale_y_continuous(label = unit_format(unit = "m", scale = 1e-6))+
labs(title="Forecast: Residential Power - Model 1", subtitle="ARIMA(3,0,2)(2,1,0)[12] with drift", y = "KWH (in Millions)")+theme_bw()+theme()
## unable to get autoplot autolayer working :(
## Error: Invalid input: date_trans works with objects of class Date only
#forecast::autoplot(arima_fc)+forecast::autolayer(arima_auto$fitted, series="Fitted")
#  labs(y = "KWH (in Millions)")+
#  theme_classic()+theme(legend.position = 'bottom')+
#  scale_y_continuous(label = unit_format(unit = "m", scale = 1e-6))
library(easypackages)
libraries('knitr', 'kableExtra', 'default')
# Processing
libraries('readxl', 'tidyverse', 'janitor', 'imputeTS', 'tsoutliers', 'lubridate')
### UNABLE TO GET JAVA TO CONFIGURE FOR >>> 'xlsx'
# Timeseries
libraries('psych', 'urca', 'forecast', 'timetk', 'fpp2')
# Graphing
libraries('ggplot2', 'grid', 'gridExtra', 'ggfortify','ggpubr', 'scales')
# Data Aquisition
atm_data <- read_excel("data/ATM624Data.xlsx")
power_data <- read_excel("data/ResidentialCustomerForecastLoad-624.xlsx")
pipe1_data <- read_excel("data/Waterflow_Pipe1.xlsx")
pipe2_data <- read_excel("data/Waterflow_Pipe2.xlsx")
# Source Code
source('~/GitHub/CUNY_DATA_624/Project One/scripts/Part-A.R')
### UNIVERSAL DATA SOURCING & DEFAULT SETTINGS FOR PROJECT
library(knitr)
library(kableExtra)
library(default)
# Load All Sourced Code Here >>>
suppressWarnings(source("scripts/Part-A.R"))
suppressWarnings(source("scripts/Part-B.R"))
# Set default augments for code chunks
knitr::opts_chunk$set(echo = F, message=F, warning=F, error=F, comment=F, fig.width=10, fig.height = 3)
# Set default augments for `kable_styling()`
default(kable) <- list(format="latex")
default(kable_styling)  <- list(latex_options = c("HOLD_position", "striped"))
default(row_spec) <- list(row=0, bold=T)
# Set default for ggplot theme
default(theme) <- list(axis.text.x = element_text(angle = 0, hjust = NULL),
plot.title = element_text(color="#4c4c4c", size=12, face="bold"),
plot.subtitle = (element_text(size=8, color="#000000")),
legend.title = (element_text(size=10, color="#000000", face="bold")),
strip.background = element_rect(color="#000000",
fill="#cccdd0", size=.75,linetype="solid"),
strip.text.x = element_text(size = 8, color = "#000000", face="bold"))
# GGplot Palette
default(scale_color_brewer) <- list(palette = 'RdPu', direction=1)
# Examine distribution of values to identify outliers
atm_data %>%
group_by(ATM) %>%
ggplot(aes(x = ATM, y = Cash,fill=ATM)) +
geom_boxplot() +
labs(title="ATM Boxplot",x="", y="Cash (in hundreds)") +
theme_bw() +
theme(legend.position = 'none',
axis.text.x = element_text(angle = 45,
hjust = 1)) +
scale_fill_brewer(palette = 'RdPu')
#SILENCED CODE CHUNK FOR DISCUSSION
# Box plot hard to view and interpret with large outlier. Suggest either removing outlier or
# deleting plot.
# Examine distribution of values to identify outliers
atm_data %>%
group_by(ATM) %>%
ggplot(aes(x = ATM, y = Cash,fill=ATM)) +
geom_boxplot() +
labs(title="ATM Boxplot",x="", y="Cash (in hundreds)") +
theme_bw() +
theme(legend.position = 'none',
axis.text.x = element_text(angle = 45,
hjust = 1)) +
scale_fill_brewer(palette = 'RdPu')
#SILENCED CODE CHUNK FOR DISCUSSION
# Box plot hard to view and interpret with large outlier. Suggest either removing outlier or
# deleting plot.
# Examine distribution of values to identify outliers
atm_data %>%
group_by(ATM) %>%
ggplot(aes(x = ATM, y = Cash,fill=ATM)) +
geom_boxplot() +
labs(title="ATM Boxplot",x="", y="Cash (in hundreds)") +
theme_bw() +
theme(legend.position = 'none',
axis.text.x = element_text(angle = 45,
hjust = 1)) +
scale_fill_brewer(palette = 'RdPu')
#SILENCED CODE CHUNK FOR DISCUSSION
# Box plot hard to view and interpret with large outlier. Suggest either removing outlier or
# deleting plot.
# Examine distribution of values to identify outliers
atm_data %>%
group_by(ATM) %>%
ggplot(aes(x = ATM, y = Cash,fill=ATM)) +
geom_boxplot() +
labs(title="ATM Boxplot",x="", y="Cash (in hundreds)") +
theme_bw() +
theme(legend.position = 'none',
axis.text.x = element_text(angle = 45,
hjust = 1)) +
scale_fill_brewer(palette = 'RdPu')
# plot atms as scatterplot
atm %>%
# re-gather observations for facet plot
gather(key=ATM, value=Cash, ATM1,ATM2, ATM3,ATM4) %>%
# remove NA value from ATM2
filter(complete.cases(.)) %>%
# plot
ggplot(aes(DATE, Cash, color=ATM)) +
geom_point() +
geom_smooth(method="loess") +
facet_wrap(~ATM, scales='free_x', nrow=1) +
labs(title="ATM Scatterplot",x="", y="Cash (in hundreds)")+
theme_bw()+
theme(legend.position = 'none', axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_color_brewer()
p1<-ggAcf(ATM1_AA$residuals, lag=21, color = 'darkorange4')+ labs(title="ATM1", x="Lag", y="") +theme_bw()+theme()
p2<- ggpubr::gghistogram(ATM1_AA$residuals, fill="peachpuff1")+
labs(title="ATM1", subtitle="ARIMA(0,0,2)(0,1,1)[7]",x="")+
theme_bw()+theme()
p3<-ggAcf(ATM2_AA$residuals, lag=21,color = 'darkorange4')+ labs(title="ATM2",x="Lag", y="") +theme_bw()+theme()
p4<-ggpubr::gghistogram(ATM2_AA$residuals,  fill="lightpink")+
labs(title="ATM2", subtitle="ARIMA(2,0,2)(0,1,1)[7]",x="")+
theme_bw()+theme()
p5<-ggAcf(ATM4_AA$residuals, lag=21,color = 'darkorange4')+ labs(title="ATM4",x="Lag", y="") +theme_bw()+theme()
p6<-ggpubr::gghistogram(ATM4_AA$residuals,fill="deeppink4")+
labs(title="ATM4", subtitle="ARIMA(0,0,2)(0,1,1)[7]", x="")+
theme_bw()+theme()
grid.arrange(grob=p1, p3, p5, ncol=3, top=textGrob(label="ACF Plots of Residuals"))
grid.arrange(p2, p4, p6, ncol=3, top=textGrob(label="Histograms of Residuals"))
p1<-autoplot(ATM1_AA$fitted)+autolayer(ATM1_fc, color="peachpuff1")+
labs(title = "ATM1 Series", x="Weeks", y="Cash")+theme_bw()+theme()+
scale_x_continuous(breaks=seq(1,60,by=3))
p2<-autoplot(ATM2_AA$fitted)+autolayer(ATM1_fc,  color="lightpink")+
labs(title = "ATM2 Series", x="Weeks", y="Cash")+theme_bw()+theme()+
scale_x_continuous(breaks=seq(1,60,by=3))
p3<-ATM3_plotdata %>%
ggplot()+
geom_line(aes(x = Date/7, y = Cash))+
geom_line(aes(x = Date/7, y=`Point Forecast`))+
geom_ribbon(aes(x = Date/7, ymin = `Lo 95`, ymax = `Hi 95`), linetype = 'blank', fill = 'deeppink4', alpha = .4)+
geom_ribbon(aes(x = Date/7, ymin = `Lo 80`, ymax = `Hi 80`), linetype = 'blank', fill = 'deeppink4', alpha = .2)+
labs(title = "ATM3 Series", x="Weeks", y="Cash")+theme_bw()+theme()+
scale_x_continuous(breaks=seq(1,60,by=3))
p4<-autoplot(ATM4_AA$fitted)+autolayer(ATM1_fc, color="darkorchid4")+
labs(title = "ATM4 Series", x="Weeks", y="Cash")+theme_bw()+theme()+
scale_x_continuous(breaks=seq(1,60,by=3))
grid.arrange(p1, p2, p3, p4, ncol=1, top=textGrob(label="ATM Forecasts"))
psych::describeBy(atm_data$Cash,  # look at distribution of cash distributed
group = atm_data$ATM,  # group by which ATM
mat = TRUE) %>%  # output matrix rather than lists
dplyr::select(-item, - vars) %>%
knitr::kable(caption = 'Summary Statistics of ATM time series',
digits = 2,
format = 'markdown',
padding = 0,
row.names = FALSE) %>%
kable_styling(c('striped', 'hover', 'condensed'))
psych::describeBy(atm_data$Cash,  # look at distribution of cash distributed
group = atm_data$ATM,  # group by which ATM
mat = TRUE) %>%  # output matrix rather than lists
dplyr::select(-item, - vars) %>%
knitr::kable(caption = 'Summary Statistics of ATM time series',
digits = 2,
format = 'markdown',
padding = 0,
row.names = FALSE) %>%
kable_styling(c('striped', 'hover', 'condensed'))
psych::describeBy(atm_data$Cash,  # look at distribution of cash distributed
group = atm_data$ATM,  # group by which ATM
mat = TRUE) %>%  # output matrix rather than lists
dplyr::select(-item, - vars) %>%
rename(ATM = group1) %>%
knitr::kable(caption = 'Summary Statistics of ATM time series',
digits = 2,
format = 'markdown',
padding = 0,
row.names = FALSE) %>%
kable_styling(c('striped', 'hover', 'condensed'))
p1<-autoplot(ATM1_AA$fitted)+autolayer(ATM1_fc, color="peachpuff1")+
labs(title = "ATM1 Series", x="Weeks", y="Cash")+theme_bw()+theme()+
scale_x_continuous(breaks=seq(1,60,by=3))+
ylim(0,250)
p2<-autoplot(ATM2_AA$fitted)+autolayer(ATM1_fc,  color="lightpink")+
labs(title = "ATM2 Series", x="Weeks", y="Cash")+theme_bw()+theme()+
scale_x_continuous(breaks=seq(1,60,by=3))+
ylim(0,250)
p3<-ATM3_plotdata %>%
ggplot()+
geom_line(aes(x = Date/7, y = Cash))+
geom_line(aes(x = Date/7, y=`Point Forecast`))+
geom_ribbon(aes(x = Date/7, ymin = `Lo 95`, ymax = `Hi 95`), linetype = 'blank', fill = 'deeppink4', alpha = .4)+
geom_ribbon(aes(x = Date/7, ymin = `Lo 80`, ymax = `Hi 80`), linetype = 'blank', fill = 'deeppink4', alpha = .2)+
labs(title = "ATM3 Series", x="Weeks", y="Cash")+theme_bw()+theme()+
scale_x_continuous(breaks=seq(1,60,by=3))+
ylim(0,250)
p4<-autoplot(ATM4_AA$fitted)+autolayer(ATM1_fc, color="darkorchid4")+
labs(title = "ATM4 Series", x="Weeks", y="Cash")+theme_bw()+theme()+
scale_x_continuous(breaks=seq(1,60,by=3))+
ylim(0,250)
grid.arrange(p1, p2, p3, p4, ncol=1, top=textGrob(label="ATM Forecasts"))
p1<-autoplot(ATM1_AA$fitted)+autolayer(ATM1_fc, color="peachpuff1")+
labs(title = "ATM1 Series", x="Weeks", y="Cash")+theme_bw()+theme()+
scale_x_continuous(breaks=seq(1,60,by=3))+
ylim(0,250)
p2<-autoplot(ATM2_AA$fitted)+autolayer(ATM2_fc,  color="lightpink")+
labs(title = "ATM2 Series", x="Weeks", y="Cash")+theme_bw()+theme()+
scale_x_continuous(breaks=seq(1,60,by=3))+
ylim(0,250)
p3<-ATM3_plotdata %>%
ggplot()+
geom_line(aes(x = Date/7, y = Cash))+
geom_line(aes(x = Date/7, y=`Point Forecast`))+
geom_ribbon(aes(x = Date/7, ymin = `Lo 95`, ymax = `Hi 95`), linetype = 'blank', fill = 'deeppink4', alpha = .4)+
geom_ribbon(aes(x = Date/7, ymin = `Lo 80`, ymax = `Hi 80`), linetype = 'blank', fill = 'deeppink4', alpha = .2)+
labs(title = "ATM3 Series", x="Weeks", y="Cash")+theme_bw()+theme()+
scale_x_continuous(breaks=seq(1,60,by=3))+
ylim(0,250)
p4<-autoplot(ATM4_AA$fitted)+autolayer(ATM4_fc, color="darkorchid4")+
labs(title = "ATM4 Series", x="Weeks", y="Cash")+theme_bw()+theme()+
scale_x_continuous(breaks=seq(1,60,by=3))+
ylim(0,250)
grid.arrange(p1, p2, p3, p4, ncol=1, top=textGrob(label="ATM Forecasts"))
p1<-ggAcf(ATM1_AA$residuals, lag=21, color = 'darkorange4')+ labs(title="ATM1", x="Lag", y="") +theme_bw()+theme()
p2<- ggpubr::gghistogram(ATM1_AA$residuals, fill="peachpuff1")+
labs(title="ATM1", subtitle="ARIMA(0,0,2)(0,1,1)[7]",x="")+
ylim(0,125)+
theme_bw()+theme()
p3<-ggAcf(ATM2_AA$residuals, lag=21,color = 'darkorange4')+ labs(title="ATM2",x="Lag", y="") +theme_bw()+theme()
p4<-ggpubr::gghistogram(ATM2_AA$residuals,  fill="lightpink")+
labs(title="ATM2", subtitle="ARIMA(2,0,2)(0,1,1)[7]",x="")+
theme_bw()+theme()
p5<-ggAcf(ATM4_AA$residuals, lag=21,color = 'darkorange4')+ labs(title="ATM4",x="Lag", y="") +theme_bw()+theme()
p6<-ggpubr::gghistogram(ATM4_AA$residuals,fill="deeppink4")+
labs(title="ATM4", subtitle="ARIMA(0,0,2)(0,1,1)[7]", x="")+
theme_bw()+theme()
grid.arrange(grob=p1, p3, p5, ncol=3, top=textGrob(label="ACF Plots of Residuals"))
grid.arrange(p2, p4, p6, ncol=3, top=textGrob(label="Histograms of Residuals"))
p1<-ggAcf(ATM1_AA$residuals, lag=21, color = 'darkorange4')+ labs(title="ATM1", x="Lag", y="") +theme_bw()+theme()
p2<- ggpubr::gghistogram(ATM1_AA$residuals, fill="peachpuff1")+
labs(title="ATM1", subtitle="ARIMA(0,0,2)(0,1,1)[7]",x="")+
ylim(0,125)+
theme_bw()+theme()
p3<-ggAcf(ATM2_AA$residuals, lag=21,color = 'darkorange4')+ labs(title="ATM2",x="Lag", y="") +theme_bw()+theme()
p4<-ggpubr::gghistogram(ATM2_AA$residuals,  fill="lightpink")+
labs(title="ATM2", subtitle="ARIMA(2,0,2)(0,1,1)[7]",x="")+
ylim(0,125)+
theme_bw()+theme()
p5<-ggAcf(ATM4_AA$residuals, lag=21,color = 'darkorange4')+ labs(title="ATM4",x="Lag", y="") +theme_bw()+theme()
p6<-ggpubr::gghistogram(ATM4_AA$residuals,fill="deeppink4")+
labs(title="ATM4", subtitle="ARIMA(0,0,2)(0,1,1)[7]", x="")+
ylim(0,125)+
theme_bw()+theme()
grid.arrange(grob=p1, p3, p5, ncol=3, top=textGrob(label="ACF Plots of Residuals"))
grid.arrange(p2, p4, p6, ncol=3, top=textGrob(label="Histograms of Residuals"))
p1<-ggAcf(ATM1_AA$residuals, lag=21, color = 'darkorange4')+ labs(title="ATM1", x="Lag", y="") +theme_bw()+theme()
p2<- ggpubr::gghistogram(ATM1_AA$residuals, fill="peachpuff1")+
labs(title="ATM1", subtitle="ARIMA(0,0,2)(0,1,1)[7]",x="")+
ylim(0,125)+
theme_bw()+theme()
p3<-ggAcf(ATM2_AA$residuals, lag=21,color = 'darkorange4')+ labs(title="ATM2",x="Lag", y="") +theme_bw()+theme()
p4<-ggpubr::gghistogram(ATM2_AA$residuals,  fill="lightpink")+
labs(title="ATM2", subtitle="ARIMA(2,0,2)(0,1,1)[7]",x="")+
ylim(0,125)+
theme_bw()+theme()
p5<-ggAcf(ATM4_AA$residuals, lag=21,color = 'darkorange4')+ labs(title="ATM4",x="Lag", y="") +theme_bw()+theme()
p6<-ggpubr::gghistogram(ATM4_AA$residuals,fill="darkorchid4")+
labs(title="ATM4", subtitle="ARIMA(0,0,2)(0,1,1)[7]", x="")+
ylim(0,125)+
theme_bw()+theme()
grid.arrange(grob=p1, p3, p5, ncol=3, top=textGrob(label="ACF Plots of Residuals"))
grid.arrange(p2, p4, p6, ncol=3, top=textGrob(label="Histograms of Residuals"))
ATM2_ts %>% window(end = 50) %>% autoplot()
p1<-ggAcf(ATM1_ts, color = 'darkorange4')+ labs(title="ACF: ATM1")+ theme_bw()+theme()
p2<-ggPacf(ATM1_ts,color = 'darkorange4')+ labs(title="PACF: ATM1")+ theme_bw()+ theme()
p3<-ggAcf(ATM2_ts,color = 'darkorange4')+ labs(title="ACF: ATM2")+ theme_bw()+theme()
p4<-ggPacf(ATM2_ts,color = 'darkorange4')+ labs(title="PACF: ATM2")+ theme_bw()+ theme()
p5<-ggAcf(ATM4_ts,color = 'darkorange4')+ labs(title="ACF: ATM4")+ theme_bw()+theme()
p6<-ggPacf(ATM4_ts,color = 'darkorange4')+ labs(title="PACF: ATM4")+ theme_bw()+ theme()
grid.arrange(grob=p1, p3, p5, p2, p4, p6, ncol=3)
grid.arrange(grob=p1, p3, p5, p2, p4, p6, ncol=3)
autoplot(atm_ts, facets = T)+
geom_line(color="darkorange4")+
labs(title = "Daily ATM Transactions",
subtitle = "Series: ATM1", y="Cash (in hundreds)", x="Weeks")+
theme_bw()+ theme()
autoplot(atm_ts, facets = T)+
geom_line(color="darkorange4")+
labs(title = "Daily ATM Transactions",
subtitle = "Series: ATM1", y="Cash (in hundreds)", x="Weeks")+
ylim(0,175)
theme_bw()+ theme()
autoplot(atm_ts, facets = T)+
geom_line(color="darkorange4")+
labs(title = "Daily ATM Transactions",
subtitle = "Series: ATM1", y="Cash (in hundreds)", x="Weeks")+
ylim(0,175)+
theme_bw()+ theme()
