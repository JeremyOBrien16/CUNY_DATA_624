z <- fourier(ts(atm$ATM1, frequency=1), K=.5)
p1<-ggAcf(ATM1_AA$residuals, lag=21)+ labs(title="ATM1", x="Lag", y="") +theme_bw()+theme()
p2<- ggpubr::gghistogram(ATM1_AA$residuals, fill="peachpuff1")+
labs(title="ATM1", subtitle="ARIMA(0,0,2)(0,1,1)[7]",x="")+
theme_bw()+theme()
p3<-ggAcf(ATM2_AA$residuals, lag=21)+ labs(title="ATM2",x="Lag", y="") +theme_bw()+theme()
p4<-ggpubr::gghistogram(ATM2_AA$residuals,  fill="lightpink")+
labs(title="ATM2", subtitle="ARIMA(2,0,2)(0,1,1)[7]",x="")+
theme_bw()+theme()
p5<-ggAcf(ATM4_AA$residuals, lag=21)+ labs(title="ATM4",x="Lag", y="") +theme_bw()+theme()
p6<-ggpubr::gghistogram(ATM4_AA$residuals,fill="deeppink4")+
labs(title="ATM4", subtitle="ARIMA(0,0,2)(0,1,1)[7]", x="")+
theme_bw()+theme()
grid.arrange(grob=p1, p3, p5, ncol=3, top=textGrob(label="ACF Plots"))
grid.arrange(p2, p4, p6, ncol=3, top=textGrob(label="Residuals Plots"))
p1<-ggAcf(ATM1_AA$residuals, lag=21)+ labs(title="ATM1", x="Lag", y="") +theme_bw()+theme()
p2<- ggpubr::gghistogram(ATM1_AA$residuals, fill="peachpuff1")+
labs(title="ATM1", subtitle="ARIMA(0,0,2)(0,1,1)[7]",x="")+
theme_bw()+theme()
p3<-ggAcf(ATM2_AA$residuals, lag=21)+ labs(title="ATM2",x="Lag", y="") +theme_bw()+theme()
p4<-ggpubr::gghistogram(ATM2_AA$residuals,  fill="lightpink")+
labs(title="ATM2", subtitle="ARIMA(2,0,2)(0,1,1)[7]",x="")+
theme_bw()+theme()
p5<-ggAcf(ATM4_AA$residuals, lag=21)+ labs(title="ATM4",x="Lag", y="") +theme_bw()+theme()
p6<-ggpubr::gghistogram(ATM4_AA$residuals,fill="deeppink4")+
labs(title="ATM4", subtitle="ARIMA(0,0,2)(0,1,1)[7]", x="")+
theme_bw()+theme()
grid.arrange(grob=p1, p3, p5, ncol=3, top=textGrob(label="ACF Plots"))
grid.arrange(p2, p4, p6, ncol=3, top=textGrob(label="Residuals Plots"))
p1<-autoplot(ATM1_AA$fitted)+autolayer(ATM1_AA_fc, color="peachpuff1")+
coord_cartesian(xlim = c(40, 58))+
labs(subtitle = "ATM1 Series", x="Weeks", y="Cash")+theme_bw()+theme()
p2<-autoplot(ATM2_AA$fitted)+autolayer(ATM2_AA_fc,  color="lightpink")+
coord_cartesian(xlim = c(40, 58))+
labs(subtitle = "ATM2 Series", x="Weeks", y="Cash")+theme_bw()+theme()
p3<-autoplot(ATM4_AA$fitted)+autolayer(ATM4_AA_fc, color="deeppink4")+
coord_cartesian(xlim = c(40, 58))+
labs(subtitle = "ATM4 Series", x="Weeks", y="Cash")+theme_bw()+theme()
grid.arrange(p1, p2, p3, ncol=3, top=textGrob(label="ATM Forecasts"))
### UNIVERSAL DATA SOURCING & DEFAULT SETTINGS FOR PROJECT
# Load All Sourced Code
suppressWarnings(source("scripts/Part-A-JM.R"))
# TBATS model
ATM1_TB <- tbats(ATM1_ms, seasonal.periods = c(7))
ATM2_TB <- tbats(ATM2_ms, seasonal.periods = c(7))
ATM4_TB <- tbats(ATM4_ms, seasonal.periods = c(7))
# Forecast Results
ATM1_TB_fc<- forecast(ATM1_TB, h=31)
ATM2_TB_fc<- forecast(ATM2_TB, h=31)
ATM4_TB_fc<- forecast(ATM4_TB, h=31)
# Convert Date Format and Join Forecasts
ATM_TB_FC <- ATM1_TB_fc %>% as.data.frame() %>% rownames_to_column(var="Date") %>%
mutate(Date = as.Date(date_decimal(as.numeric(Date)))) %>%
rename("ATM1"="Point Forecast") %>% select(Date, ATM1)
ATM2_TB_FC <- ATM2_TB_fc %>% as.data.frame() %>% rownames_to_column(var="Date") %>%
mutate(Date = as.Date(date_decimal(as.numeric(Date)))) %>%
rename("ATM2"="Point Forecast") %>% select(Date, ATM2)
ATM4_TB_FC <- ATM4_TB_fc %>% as.data.frame() %>% rownames_to_column(var="Date") %>%
mutate(Date = as.Date(date_decimal(as.numeric(Date)))) %>%
rename("ATM4"="Point Forecast") %>% select(Date, ATM4)
ATM_TB_FC <- ATM_TB_FC %>% left_join(ATM2_TB_FC, by="Date")%>% left_join(ATM4_TB_FC, by="Date")
ATM1_TB %>% autoplot()
autoplot(ATM1_TB)
autoplot(ATM1_TB_fc)
# TBATS model
ATM1_TB <- tbats(ATM1_ms, seasonal.periods = c(1,7))
ATM2_TB <- tbats(ATM2_ms, seasonal.periods = c(1,7))
ATM4_TB <- tbats(ATM4_ms, seasonal.periods = c(1,7))
# Forecast Results
ATM1_TB_fc<- forecast(ATM1_TB, h=31)
ATM2_TB_fc<- forecast(ATM2_TB, h=31)
ATM4_TB_fc<- forecast(ATM4_TB, h=31)
# Convert Date Format and Join Forecasts
ATM_TB_FC <- ATM1_TB_fc %>% as.data.frame() %>% rownames_to_column(var="Date") %>%
mutate(Date = as.Date(date_decimal(as.numeric(Date)))) %>%
rename("ATM1"="Point Forecast") %>% select(Date, ATM1)
ATM2_TB_FC <- ATM2_TB_fc %>% as.data.frame() %>% rownames_to_column(var="Date") %>%
mutate(Date = as.Date(date_decimal(as.numeric(Date)))) %>%
rename("ATM2"="Point Forecast") %>% select(Date, ATM2)
ATM4_TB_FC <- ATM4_TB_fc %>% as.data.frame() %>% rownames_to_column(var="Date") %>%
mutate(Date = as.Date(date_decimal(as.numeric(Date)))) %>%
rename("ATM4"="Point Forecast") %>% select(Date, ATM4)
ATM_TB_FC <- ATM_TB_FC %>% left_join(ATM2_TB_FC, by="Date")%>% left_join(ATM4_TB_FC, by="Date")
autoplot(ATM1_TB_fc)
ATM1_TB_fc
ATM1_TB_fc
date_decimal(2010.3290)
ATM1_TB_fc
date_decimal(2010.3537)
ATM1_TB_fc
ATM1_TB$AIC
# Dependencies
## processing
library(readxl)
library(tidyverse)
library(janitor)
## forecasting packages
library(urca)
library(forecast)
library(lubridate)
# load data
atm_data <- read_excel("data/ATM624Data.xlsx")
# clean dataframe
atm <- atm_data %>%
# create wide dataframe
spread(ATM, Cash) %>%
# remove NA column using function from janitor package
remove_empty(which = "cols") %>%
# filter unobserved values from May 2010
filter(DATE < as.Date("2010-05-01")) %>%
# ensure dates are ascending
arrange(DATE)
atm$ATM2[is.na(atm$ATM2)] <- mean(atm$ATM2, na.rm = TRUE) ## remove NA
atm$ATM4[which.max(atm$ATM4)] <- mean(atm$ATM4, na.rm = TRUE) ## remove outlier
# create TS with weekly frequency & subset data
atm_ts <- atm %>% select(-DATE) %>% ts(start=1,  frequency = 7)
ATM1_ts <- atm_ts[,1]; ATM2_ts <- atm_ts[,2]; ATM4_ts <- atm_ts[,4]
#unit root test
## no diff
ATM1_ur <-ur.kpss(ATM1_ts)
ATM2_ur <-ur.kpss(ATM2_ts)
ATM4_ur <-ur.kpss(ATM4_ts)
## first order diff
ATM1d_ur <-ur.kpss(diff(ATM1_ts, lag=7))
ATM2d_ur <-ur.kpss(diff(ATM2_ts, lag=7))
ATM4d_ur <-ur.kpss(diff(ATM4_ts, lag=7))
# AUTO.ARIMA function; set D=1 for seasonal differencing
ATM1_AA <-auto.arima(ATM1_ts, D = 1, lambda = "auto", approximation = F, stepwise = T)
ATM2_AA <-auto.arima(ATM2_ts, D = 1, lambda = "auto", approximation = F, stepwise = T)
ATM4_AA <-auto.arima(ATM4_ts, D = 1, lambda = "auto", approximation = F, stepwise = T)
# Forecast Results
ATM1_AA_fc <- forecast(ATM1_AA,h=31)
ATM2_AA_fc <- forecast(ATM1_AA,h=31)
ATM4_AA_fc <- forecast(ATM1_AA,h=31)
ATM_AA_FC <- cbind("Week"=c(1,2,3,4), "ATM1"=ATM1_AA_fc$mean, "ATM2"=ATM2_AA_fc$mean,
"ATM3"=c(NA,NA,NA,NA),"ATM4"=ATM4_AA_fc$mean) %>% as.data.frame()
# create multi-seasonal time series & subset data
atm_ms <- atm %>%  select(-DATE) %>%
msts(start=2009.329, seasonal.periods=c(7,365.25))
ATM1_ms <- atm_ms[,1]; ATM2_ms <- atm_ms[,2];ATM4_ms <- atm_ms[,4]
# TBATS model
ATM1_TB <- tbats(ATM1_ms, seasonal.periods = c(7,365.25))
ATM2_TB <- tbats(ATM2_ms, seasonal.periods = c(7,365.25))
ATM4_TB <- tbats(ATM4_ms, seasonal.periods = c(7,365.25))
# Forecast Results
ATM1_TB_fc<- forecast(ATM1_TB, h=31)
ATM2_TB_fc<- forecast(ATM2_TB, h=31)
ATM4_TB_fc<- forecast(ATM4_TB, h=31)
# Convert Date Format and Join Forecasts
ATM_TB_FC <- ATM1_TB_fc %>% as.data.frame() %>% rownames_to_column(var="Date") %>%
mutate(Date = as.Date(date_decimal(as.numeric(Date)))) %>%
rename("ATM1"="Point Forecast") %>% select(Date, ATM1)
ATM2_TB_FC <- ATM2_TB_fc %>% as.data.frame() %>% rownames_to_column(var="Date") %>%
mutate(Date = as.Date(date_decimal(as.numeric(Date)))) %>%
rename("ATM2"="Point Forecast") %>% select(Date, ATM2)
ATM4_TB_FC <- ATM4_TB_fc %>% as.data.frame() %>% rownames_to_column(var="Date") %>%
mutate(Date = as.Date(date_decimal(as.numeric(Date)))) %>%
rename("ATM4"="Point Forecast") %>% select(Date, ATM4)
ATM_TB_FC <- ATM_TB_FC %>% left_join(ATM2_TB_FC, by="Date")%>% left_join(ATM4_TB_FC, by="Date")
# Save output
write.csv(ATM_AA_FC, file="forecasts/ATM_Forecast1.csv")
write.csv(ATM_TB_FC, file="forecasts/ATM_Forecast2.csv")
# General
library('easypackages')
libraries('knitr', 'kableExtra', 'default')
# Processing
libraries('readxl', 'tidyverse', 'janitor', 'lubridate')
# Graphing
libraries('ggplot2', 'grid', 'gridExtra', 'ggfortify','ggpubr')
# Timeseries
libraries('zoo', 'urca', 'tseries', 'timetk')
# Math
libraries('forecast')
# General
library('easypackages')
libraries('knitr', 'kableExtra', 'default')
# Processing
libraries('readxl', 'tidyverse', 'janitor', 'lubridate')
# Graphing
libraries('ggplot2', 'grid', 'gridExtra', 'ggfortify','ggpubr')
# Timeseries
libraries('zoo', 'urca', 'tseries', 'timetk')
# Math
libraries('forecast')
### UNIVERSAL DATA SOURCING & DEFAULT SETTINGS FOR PROJECT
# Load All Sourced Code
suppressWarnings(source("scripts/Part-A-JM.R"))
ATM1_ts <- atm_ts[,1]; ATM2_ts <- atm_ts[,2]; ATM4_ts <- atm_ts[,4]
# Dependencies
## processing
library(readxl)
library(tidyverse)
library(janitor)
## forecasting packages
library(urca)
library(forecast)
# load data
atm_data <- read_excel("data/ATM624Data.xlsx")
# clean dataframe
atm <- atm_data %>%
# create wide dataframe
spread(ATM, Cash) %>%
# remove NA column using function from janitor package
remove_empty(which = "cols") %>%
# filter unobserved values from May 2010
filter(DATE < as.Date("2010-05-01")) %>%
# ensure dates are ascending
arrange(DATE)
atm$ATM2[is.na(atm$ATM2)] <- mean(atm$ATM2, na.rm = TRUE) ## remove NA
atm$ATM4[which.max(atm$ATM4)] <- mean(atm$ATM4, na.rm = TRUE) ## remove outlier
# create TS with weekly frequency & subset data
atm_ts <- atm %>% select(-DATE) %>% ts(start=1,  frequency = 7)
ATM1_ts <- atm_ts[,1]; ATM2_ts <- atm_ts[,2]; ATM4_ts <- atm_ts[,4]
#unit root test
## no diff
ATM1_ur <-ur.kpss(ATM1_ts)
ATM2_ur <-ur.kpss(ATM2_ts)
ATM4_ur <-ur.kpss(ATM4_ts)
## first order diff
ATM1d_ur <-ur.kpss(diff(ATM1_ts, lag=7))
ATM2d_ur <-ur.kpss(diff(ATM2_ts, lag=7))
ATM4d_ur <-ur.kpss(diff(ATM4_ts, lag=7))
# AUTO.ARIMA function; set D=1 for seasonal differencing
ATM1_AA <-auto.arima(ATM1_ts, D = 1, lambda = "auto", approximation = F, stepwise = T)
ATM2_AA <-auto.arima(ATM2_ts, D = 1, lambda = "auto", approximation = F, stepwise = T)
ATM4_AA <-auto.arima(ATM4_ts, D = 1, lambda = "auto", approximation = F, stepwise = T)
# Forecast Results
ATM1_fc <- forecast(ATM1_AA,h=31)
ATM2_fc <- forecast(ATM1_AA,h=31)
ATM4_fc <- forecast(ATM1_AA,h=31)
ATM_FC <- cbind("Week"=c(1,2,3,4), "ATM1"=ATM1_AA_fc$mean, "ATM2"=ATM2_AA_fc$mean,
"ATM3"=c(NA,NA,NA,NA),"ATM4"=ATM4_AA_fc$mean) %>% as.data.frame()
# Save output
write.csv(ATM_FC, file="forecasts/ATM_ARIMA_FC.csv")
# Dependencies
## processing
library(readxl)
library(tidyverse)
library(janitor)
## forecasting packages
library(urca)
library(forecast)
# load data
atm_data <- read_excel("data/ATM624Data.xlsx")
# clean dataframe
atm <- atm_data %>%
# create wide dataframe
spread(ATM, Cash) %>%
# remove NA column using function from janitor package
remove_empty(which = "cols") %>%
# filter unobserved values from May 2010
filter(DATE < as.Date("2010-05-01")) %>%
# ensure dates are ascending
arrange(DATE)
atm$ATM2[is.na(atm$ATM2)] <- mean(atm$ATM2, na.rm = TRUE) ## remove NA
atm$ATM4[which.max(atm$ATM4)] <- mean(atm$ATM4, na.rm = TRUE) ## remove outlier
# create TS with weekly frequency & subset data
atm_ts <- atm %>% select(-DATE) %>% ts(start=1,  frequency = 7)
ATM1_ts <- atm_ts[,1]; ATM2_ts <- atm_ts[,2]; ATM4_ts <- atm_ts[,4]
#unit root test
## no diff
ATM1_ur <-ur.kpss(ATM1_ts)
ATM2_ur <-ur.kpss(ATM2_ts)
ATM4_ur <-ur.kpss(ATM4_ts)
## first order diff
ATM1d_ur <-ur.kpss(diff(ATM1_ts, lag=7))
ATM2d_ur <-ur.kpss(diff(ATM2_ts, lag=7))
ATM4d_ur <-ur.kpss(diff(ATM4_ts, lag=7))
# AUTO.ARIMA function; set D=1 for seasonal differencing
ATM1_AA <-auto.arima(ATM1_ts, D = 1, lambda = "auto", approximation = F, stepwise = T)
ATM2_AA <-auto.arima(ATM2_ts, D = 1, lambda = "auto", approximation = F, stepwise = T)
ATM4_AA <-auto.arima(ATM4_ts, D = 1, lambda = "auto", approximation = F, stepwise = T)
# Forecast Results
ATM1_fc <- forecast(ATM1_fc,h=31)
ATM2_fc <- forecast(ATM2_fc,h=31)
ATM4_fc <- forecast(ATM4_fc,h=31)
ATM_FC <- cbind("Week"=c(1,2,3,4), "ATM1"=ATM1_fc$mean, "ATM2"=ATM2_fc$mean,
"ATM3"=c(NA,NA,NA,NA),"ATM4"=ATM4_fc$mean) %>% as.data.frame()
# Save output
write.csv(ATM_FC, file="forecasts/ATM_ARIMA_FC.csv")
1:31
weeks <- 1:31
rbind(weeks)
weeks
ATM_FC <-  cbind("Week"=weeks, "ATM1"=ATM1_fc$mean, "ATM2"=ATM2_fc$mean,
"ATM3"=c(NA,NA,NA,NA),"ATM4"=ATM4_fc$mean) %>% as.data.frame()
weeks <- c(5, 1:31, 2010)
weeks
seq(as.Date('2010-05-01'), length.out=31, by=1)
date <- seq(as.Date('2010-05-01'), length.out=31, by=1)
ATM_FC <-  cbind("Date"=date, "ATM1"=ATM1_fc$mean, "ATM2"=ATM2_fc$mean,
"ATM3"=c(NA,NA,NA,NA),"ATM4"=ATM4_fc$mean) %>% as.data.frame()
ATM_FC
ATM_FC <-  cbind("Date"=as.Date(date), "ATM1"=ATM1_fc$mean, "ATM2"=ATM2_fc$mean,
"ATM3"=c(NA,NA,NA,NA),"ATM4"=ATM4_fc$mean) %>% as.data.frame()
ATM_FC
date <- seq('2010-05-01', length.out=31, by=1)
as.character(seq(as.Date('2010-05-01'), length.out=31, by=1))
cbind("Date"=date, "ATM1"=ATM1_fc$mean, "ATM2"=ATM2_fc$mean,
"ATM3"=c(NA,NA,NA,NA),"ATM4"=ATM4_fc$mean) %>% as.data.frame()
knitr::opts_chunk$set(echo = TRUE)
date <- as.character(seq(as.Date('2010-05-01'), length.out=31, by=1))
cbind("Date"=date, "ATM1"=ATM1_fc$mean, "ATM2"=ATM2_fc$mean,
"ATM3"=c(NA,NA,NA,NA),"ATM4"=ATM4_fc$mean) %>% as.data.frame()
date <- as.character(seq(as.Date('2010-05-01'), length.out=31, by=1))
test<-cbind("Date"=date, "ATM1"=ATM1_fc$mean, "ATM2"=ATM2_fc$mean,
"ATM3"=c(NA,NA,NA,NA),"ATM4"=ATM4_fc$mean) %>% as.data.frame()
test
date <- seq(as.Date('2010-05-01'), length.out=31, by=1)
test<-cbind("Date"=date, "ATM1"=ATM1_fc$mean, "ATM2"=ATM2_fc$mean,
"ATM3"=c(NA,NA,NA,NA),"ATM4"=ATM4_fc$mean) %>% as.data.frame()
test
# Dependencies
## processing
library(readxl)
library(tidyverse)
library(janitor)
## forecasting packages
library(urca)
library(forecast)
# load data
atm_data <- read_excel("data/ATM624Data.xlsx")
# clean dataframe
atm <- atm_data %>%
# create wide dataframe
spread(ATM, Cash) %>%
# remove NA column using function from janitor package
remove_empty(which = "cols") %>%
# filter unobserved values from May 2010
filter(DATE < as.Date("2010-05-01")) %>%
# ensure dates are ascending
arrange(DATE)
atm$ATM2[is.na(atm$ATM2)] <- mean(atm$ATM2, na.rm = TRUE) ## remove NA
atm$ATM4[which.max(atm$ATM4)] <- mean(atm$ATM4, na.rm = TRUE) ## remove outlier
# create TS with weekly frequency & subset data
atm_ts <- atm %>% select(-DATE) %>% ts(start=1,  frequency = 7)
ATM1_ts <- atm_ts[,1]; ATM2_ts <- atm_ts[,2]; ATM4_ts <- atm_ts[,4]
#unit root test
## no diff
ATM1_ur <-ur.kpss(ATM1_ts)
ATM2_ur <-ur.kpss(ATM2_ts)
ATM4_ur <-ur.kpss(ATM4_ts)
## first order diff
ATM1d_ur <-ur.kpss(diff(ATM1_ts, lag=7))
ATM2d_ur <-ur.kpss(diff(ATM2_ts, lag=7))
ATM4d_ur <-ur.kpss(diff(ATM4_ts, lag=7))
# AUTO.ARIMA function; set D=1 for seasonal differencing
ATM1_AA <-auto.arima(ATM1_ts, D = 1, lambda = "auto", approximation = F, stepwise = T)
ATM2_AA <-auto.arima(ATM2_ts, D = 1, lambda = "auto", approximation = F, stepwise = T)
ATM4_AA <-auto.arima(ATM4_ts, D = 1, lambda = "auto", approximation = F, stepwise = T)
# Forecast Results
ATM1_fc <- forecast(ATM1_fc,h=31)
ATM2_fc <- forecast(ATM2_fc,h=31)
ATM4_fc <- forecast(ATM4_fc,h=31)
date <- as.character(seq(as.Date('2010-05-01'), length.out=31, by=1))
ATM_FC <-  cbind("Date"=date, "ATM1"=ATM1_fc$mean, "ATM2"=ATM2_fc$mean,
"ATM3"=c(NA,NA,NA,NA),"ATM4"=ATM4_fc$mean) %>% as.data.frame()
# Save output
write.csv(ATM_FC, file="forecasts/ATM_ARIMA_FC.csv")
# General
library('easypackages')
libraries('knitr', 'kableExtra', 'default')
# Processing
libraries('readxl', 'tidyverse', 'janitor', 'lubridate')
# Graphing
libraries('ggplot2', 'grid', 'gridExtra', 'ggfortify','ggpubr')
# Timeseries
libraries('zoo', 'urca', 'tseries', 'timetk')
# Math
libraries('forecast')
### UNIVERSAL DATA SOURCING & DEFAULT SETTINGS FOR PROJECT
# Load All Sourced Code
suppressWarnings(source("scripts/Part-A-JM.R"))
# General
library('easypackages')
libraries('knitr', 'kableExtra', 'default')
# Processing
libraries('readxl', 'tidyverse', 'janitor', 'lubridate')
# Graphing
libraries('ggplot2', 'grid', 'gridExtra', 'ggfortify','ggpubr')
# Timeseries
libraries('zoo', 'urca', 'tseries', 'timetk')
# Math
libraries('forecast')
### UNIVERSAL DATA SOURCING & DEFAULT SETTINGS FOR PROJECT
# Load All Sourced Code
suppressWarnings(source("scripts/Part-A-JM.R"))
# Set default augments for code chunks
knitr::opts_chunk$set(echo = F, message=F, warning=F, error=F, comment=F, fig.width=10, fig.height = 3)
# Set default augments for `kable_styling()`
default(kable) <- list(format="latex")
default(kable_styling)  <- list(latex_options = c("HOLD_position", "striped"))
default(row_spec) <- list(row=0, bold=T)
# Set default for ggplot theme
default(theme) <- list(axis.text.x = element_text(angle = 0, hjust = NULL),
plot.title = element_text(color="#4c4c4c", size=12, face="bold"),
plot.subtitle = (element_text(size=8, color="#000000")),
legend.title = (element_text(size=10, color="#000000", face="bold")),
strip.background = element_rect(color="#000000",
fill="#cccdd0", size=.75, linetype="solid"),
strip.text.x = element_text(size = 8, color = "#000000", face="bold"))
# GGplot Palette
default(scale_color_brewer) <- list(palette = 'RdPu', direction=1)
# plot atms as scatterplot
atm %>%
# re-gather observations for facet plot
gather(key=ATM, value=Cash, ATM1,ATM2, ATM3,ATM4) %>%
# remove NA value from ATM2
filter(complete.cases(.)) %>%
# plot
ggplot(aes(DATE, Cash, color=ATM)) +
geom_point() +
geom_smooth(method="loess") +
facet_wrap(~ATM, scales='free_x', nrow=1) +
labs(title="ATM Scatterplot",x="", y="Cash (in hundreds)")+
theme_bw()+
theme(legend.position = 'none', axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_color_brewer()
autoplot(atm_ts, facets = T)+
labs(title = "Daily ATM Transactions",
subtitle = "Series: ATM1", y="Cash (in hundreds)", x="Weeks")+
theme_bw()+ theme()
p1<-ggAcf(ATM1_ts)+ labs(title="ACF: ATM1")+ theme_bw()+theme()
p2<-ggPacf(ATM1_ts)+ labs(title="PACF: ATM1")+ theme_bw()+ theme()
p3<-ggAcf(ATM2_ts)+ labs(title="ACF: ATM2")+ theme_bw()+theme()
p4<-ggPacf(ATM2_ts)+ labs(title="PACF: ATM2")+ theme_bw()+ theme()
p5<-ggAcf(ATM4_ts)+ labs(title="ACF: ATM4")+ theme_bw()+theme()
p6<-ggPacf(ATM4_ts)+ labs(title="PACF: ATM4")+ theme_bw()+ theme()
grid.arrange(grob=p1, p3, p5, p2, p4, p6, ncol=3)
urATM1<-cbind("ATM"="ATM1", "No-Diff"=round(ATM1_ur@teststat,4),"Diff-1" =round(ATM1d_ur@teststat,4))
urATM2<-cbind("ATM"="ATM2", "No-Diff"=round(ATM2_ur@teststat,4),"Diff-1" =round(ATM2d_ur@teststat,4))
urATM4<-cbind("ATM"="ATM4", "No-Diff"=round(ATM4_ur@teststat,4),"Diff-1" =round(ATM4d_ur@teststat,4))
rbind(urATM1, urATM2,urATM4) %>% kable(caption="KPSS unit root test") %>% kable_styling() %>% row_spec()
p1<-ggAcf(ATM1_AA$residuals, lag=21)+ labs(title="ATM1", x="Lag", y="") +theme_bw()+theme()
p2<- ggpubr::gghistogram(ATM1_AA$residuals, fill="peachpuff1")+
labs(title="ATM1", subtitle="ARIMA(0,0,2)(0,1,1)[7]",x="")+
theme_bw()+theme()
p3<-ggAcf(ATM2_AA$residuals, lag=21)+ labs(title="ATM2",x="Lag", y="") +theme_bw()+theme()
p4<-ggpubr::gghistogram(ATM2_AA$residuals,  fill="lightpink")+
labs(title="ATM2", subtitle="ARIMA(2,0,2)(0,1,1)[7]",x="")+
theme_bw()+theme()
p5<-ggAcf(ATM4_AA$residuals, lag=21)+ labs(title="ATM4",x="Lag", y="") +theme_bw()+theme()
p6<-ggpubr::gghistogram(ATM4_AA$residuals,fill="deeppink4")+
labs(title="ATM4", subtitle="ARIMA(0,0,2)(0,1,1)[7]", x="")+
theme_bw()+theme()
grid.arrange(grob=p1, p3, p5, ncol=3, top=textGrob(label="ACF Plots"))
grid.arrange(p2, p4, p6, ncol=3, top=textGrob(label="Residuals Plots"))
p1<-autoplot(ATM1_AA$fitted)+autolayer(ATM1_AA_fc, color="peachpuff1")+
coord_cartesian(xlim = c(40, 58))+
labs(subtitle = "ATM1 Series", x="Weeks", y="Cash")+theme_bw()+theme()
p1<-autoplot(ATM1_AA$fitted)+autolayer(ATM1_fc, color="peachpuff1")+
coord_cartesian(xlim = c(40, 58))+
labs(subtitle = "ATM1 Series", x="Weeks", y="Cash")+theme_bw()+theme()
p2<-autoplot(ATM2_AA$fitted)+autolayer(ATM1_fc,  color="lightpink")+
coord_cartesian(xlim = c(40, 58))+
labs(subtitle = "ATM2 Series", x="Weeks", y="Cash")+theme_bw()+theme()
p3<-autoplot(ATM4_AA$fitted)+autolayer(ATM1_fc, color="deeppink4")+
coord_cartesian(xlim = c(40, 58))+
labs(subtitle = "ATM4 Series", x="Weeks", y="Cash")+theme_bw()+theme()
grid.arrange(p1, p2, p3, ncol=3, top=textGrob(label="ATM Forecasts"))
p1<-autoplot(ATM1_AA$fitted)+autolayer(ATM1_fc, color="peachpuff1")+
coord_cartesian(xlim = c(40, 58))+
labs(subtitle = "ATM1 Series", x="Weeks", y="Cash")+theme_bw()+theme()+
scale_x_continuous(breaks=seq(1,60,by=1))
p2<-autoplot(ATM2_AA$fitted)+autolayer(ATM1_fc,  color="lightpink")+
coord_cartesian(xlim = c(40, 58))+
labs(subtitle = "ATM2 Series", x="Weeks", y="Cash")+theme_bw()+theme()
p3<-autoplot(ATM4_AA$fitted)+autolayer(ATM1_fc, color="deeppink4")+
coord_cartesian(xlim = c(40, 58))+
labs(subtitle = "ATM4 Series", x="Weeks", y="Cash")+theme_bw()+theme()
grid.arrange(p1, p2, p3, ncol=3, top=textGrob(label="ATM Forecasts"))
p1<-autoplot(ATM1_AA$fitted)+autolayer(ATM1_fc, color="peachpuff1")+
coord_cartesian(xlim = c(40, 58))+
labs(subtitle = "ATM1 Series", x="Weeks", y="Cash")+theme_bw()+theme()+
scale_x_continuous(breaks=seq(1,60,by=3))
p2<-autoplot(ATM2_AA$fitted)+autolayer(ATM1_fc,  color="lightpink")+
coord_cartesian(xlim = c(40, 58))+
labs(subtitle = "ATM2 Series", x="Weeks", y="Cash")+theme_bw()+theme()
p3<-autoplot(ATM4_AA$fitted)+autolayer(ATM1_fc, color="deeppink4")+
coord_cartesian(xlim = c(40, 58))+
labs(subtitle = "ATM4 Series", x="Weeks", y="Cash")+theme_bw()+theme()
grid.arrange(p1, p2, p3, ncol=3, top=textGrob(label="ATM Forecasts"))
forecast(ATM1_ts, model=ATM1_AA, h=31)
forecast(ATM1_AA, h=31)
p1<-autoplot(ATM1_AA$fitted)+autolayer(ATM1_fc, color="peachpuff1")+
coord_cartesian(xlim = c(40, 57.5))+
labs(subtitle = "ATM1 Series", x="Weeks", y="Cash")+theme_bw()+theme()+
scale_x_continuous(breaks=seq(1,60,by=3))
p2<-autoplot(ATM2_AA$fitted)+autolayer(ATM1_fc,  color="lightpink")+
coord_cartesian(xlim = c(40, 57.5))+
labs(subtitle = "ATM2 Series", x="Weeks", y="Cash")+theme_bw()+theme()
p3<-autoplot(ATM4_AA$fitted)+autolayer(ATM1_fc, color="deeppink4")+
coord_cartesian(xlim = c(40, 57.5))+
labs(subtitle = "ATM4 Series", x="Weeks", y="Cash")+theme_bw()+theme()
grid.arrange(p1, p2, p3, ncol=3, top=textGrob(label="ATM Forecasts"))
ATM1_fc %>% kable(caption="ATM1 Forecast") %>% kable_styling() %>% row_spec()
ATM2_fc %>% kable(caption="ATM2 Forecast") %>% kable_styling() %>% row_spec()
ATM4_fc %>% kable(caption="ATM4 Forecast") %>% kable_styling() %>% row_spec()
ATM_FC %>% kable(caption="ATM Mean Point Forecast") %>% kable_styling() %>% row_spec()
p1<-autoplot(ATM1_AA$fitted)+autolayer(ATM1_fc, color="peachpuff1")+
coord_cartesian(xlim = c(40, 57.5))+
labs(subtitle = "ATM1 Series", x="Weeks", y="Cash")+theme_bw()+theme()+
scale_x_continuous(breaks=seq(1,60,by=3))
p2<-autoplot(ATM2_AA$fitted)+autolayer(ATM1_fc,  color="lightpink")+
coord_cartesian(xlim = c(40, 57.5))+
labs(subtitle = "ATM2 Series", x="Weeks", y="Cash")+theme_bw()+theme()+
scale_x_continuous(breaks=seq(1,60,by=3))
p3<-autoplot(ATM4_AA$fitted)+autolayer(ATM1_fc, color="deeppink4")+
coord_cartesian(xlim = c(40, 57.5))+
labs(subtitle = "ATM4 Series", x="Weeks", y="Cash")+theme_bw()+theme()+
scale_x_continuous(breaks=seq(1,60,by=3))
grid.arrange(p1, p2, p3, ncol=3, top=textGrob(label="ATM Forecasts"))
